{"remainingRequest":"/home/theinscriber/Desktop/DHISAuth/node_modules/babel-loader/lib/index.js!/home/theinscriber/Desktop/DHISAuth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/theinscriber/Desktop/DHISAuth/src/components/DataElementGroupWrapper.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/theinscriber/Desktop/DHISAuth/src/components/DataElementGroupWrapper.vue","mtime":1536720554330},{"path":"/home/theinscriber/Desktop/DHISAuth/node_modules/cache-loader/dist/cjs.js","mtime":1536499925388},{"path":"/home/theinscriber/Desktop/DHISAuth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/theinscriber/Desktop/DHISAuth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _toConsumableArray from \"/home/theinscriber/Desktop/DHISAuth/node_modules/@babel/runtime/helpers/builtin/es6/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport authResource from './../authResource';\nimport DataElementGroup from '@/components/DataElementGroup.vue';\nimport _ from 'lodash';\nexport default {\n  name: 'DataElementGroupWrapper',\n  methods: {\n    initialize: function initialize() {\n      this.getInitialData();\n      this.retrieveDataElementIDs();\n      this.getDataElements();\n      this.retrieveDataElementGroups();\n    },\n    getInitialData: function getInitialData() {\n      var _this = this;\n\n      this.isLoading = true;\n      authResource().get(this.BASE_URL).then(function (response) {\n        _this.isLoading = false;\n        sessionStorage.setItem('dataValues', JSON.stringify(response.data.dataValues));\n      }).catch(function (error) {\n        _this.isLoading = false;\n        _this.response = error;\n      });\n    },\n    retrieveDataElementIDs: function retrieveDataElementIDs() {\n      var dataValues = JSON.parse(sessionStorage.getItem('dataValues'));\n      this.dataElementIDs = _.map(dataValues, 'dataElement');\n    },\n    getDataElements: function getDataElements() {\n      var _this2 = this;\n\n      var dataElementIDsString = this.dataElementIDs.join();\n      var dhisApiEndpoint = \"\".concat(this.dataElements_URL, \"?filter=id:in:[\").concat(dataElementIDsString, \"]&fields=id,displayName,formName,description,dataElementGroups\");\n      authResource().get(dhisApiEndpoint).then(function (response) {\n        var _this2$dataElements;\n\n        (_this2$dataElements = _this2.dataElements).push.apply(_this2$dataElements, _toConsumableArray(_.slice(response.data.dataElements, 1, 19)));\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    retrieveDataElementGroups: function retrieveDataElementGroups() {\n      var _this$dataElementGrou;\n\n      (_this$dataElementGrou = this.dataElementGroups).push.apply(_this$dataElementGrou, _toConsumableArray(_.chain(this.dataElements).groupBy(\"description\").toPairs().map(function (pair) {\n        return _.zipObject(['name', 'dataElements'], pair);\n      }).value()));\n    },\n    calculateTotalComparisonValue: function calculateTotalComparisonValue() {\n      var _this3 = this;\n\n      var dataValueSets = JSON.parse(sessionStorage.getItem('dataValues'));\n      var totals = [];\n\n      var _loop = function _loop() {\n        var dataElements = _this3.dataElementGroups[i].dataElements;\n        totals.push(_.chain(dataValueSets).filter(function (item) {\n          return _.includes(_.map(dataElements, 'id'), item['dataElement']);\n        }).value().reduce(function (sum, number) {\n          return;\n        }).value());\n        console.log(totals);\n      };\n\n      for (var i = 0; i < this.dataElementGroups.length; i++) {\n        _loop();\n      }\n\n      return this.getCommonTotalValue(totals);\n    },\n    getCommonTotalValue: function getCommonTotalValue(totals) {\n      var mode = [],\n          count = [],\n          i,\n          total,\n          maxIndex = 0;\n\n      for (i = 0; i < totals.length; i += 1) {\n        total = totals[i];\n        count[total] = (count[total] || 0) + 1;\n\n        if (count[total] > maxIndex) {\n          maxIndex = count[total];\n        }\n      }\n\n      for (i in count) {\n        if (count.hasOwnProperty(i)) {\n          if (count[i] === maxIndex) {\n            mode.push(Number(i));\n          }\n        }\n      }\n\n      return mode[0];\n    }\n  },\n  mounted: function mounted() {\n    this.initialize();\n  },\n  data: function data() {\n    return {\n      BASE_URL: 'http://196.216.12.28:9000/dhis/api/dataValueSets.json?orgUnit=aWxqa3whV2P&period=201808&dataSet=GinIisMjsZR',\n      dataElements_URL: 'http://196.216.12.28:9000/dhis/api/dataElements.json',\n      isLoading: false,\n      response: null,\n      dataElementIDs: [],\n      dataElements: [],\n      dataElementGroups: []\n    };\n  },\n  computed: {\n    totalComparisonValue: function totalComparisonValue() {\n      return this.calculateTotalComparisonValue();\n    }\n  },\n  watch: {\n    dataElements: function dataElements() {\n      this.retrieveDataElementGroups();\n    }\n  },\n  components: {\n    DataElementGroup: DataElementGroup\n  }\n};",{"version":3,"sources":["DataElementGroupWrapper.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n       <DataElementGroup\n               v-for=\"(dataElementGroup, index) in dataElementGroups\"\n               v-bind:groupName=\"dataElementGroup.name\"\n               v-bind:groupDataElements=\"dataElementGroup.dataElements\"\n               v-bind:index=\"index\"\n               v-bind:key=\"dataElementGroup.name\"\n               v-bind:totalComparisonValue=\"totalComparisonValue\"\n       />\n    </div>\n</template>\n\n<script>\n    import authResource from './../authResource'\n    import DataElementGroup from '@/components/DataElementGroup.vue'\n    import _ from 'lodash'\n\n    export default {\n        name: 'DataElementGroupWrapper',\n        methods: {\n\n            initialize : function()\n            {\n                this.getInitialData();\n                this.retrieveDataElementIDs();\n                this.getDataElements();\n                this.retrieveDataElementGroups();\n            },\n\n            getInitialData : function ()\n            {\n                this.isLoading = true;\n\n                authResource().get(this.BASE_URL)\n                    .then((response)=>{\n                        this.isLoading = false;\n                        sessionStorage.setItem('dataValues',JSON.stringify(response.data.dataValues))\n                    })\n                    .catch((error)=>{\n                        this.isLoading = false;\n\n                        this.response  = error;\n                    })\n            },\n\n            retrieveDataElementIDs: function ()\n            {\n                let dataValues =  JSON.parse(sessionStorage.getItem('dataValues'));\n                this.dataElementIDs = _.map(dataValues, 'dataElement');\n            },\n\n             getDataElements: function ()\n            {\n                let dataElementIDsString = this.dataElementIDs.join();\n                let dhisApiEndpoint = `${this.dataElements_URL}?filter=id:in:[${dataElementIDsString}]&fields=id,displayName,formName,description,dataElementGroups`;\n\n                authResource().get(dhisApiEndpoint)\n                                .then((response) => {\n                                    this.dataElements.push(..._.slice(response.data.dataElements,1,19));\n                                })\n                                .catch((error) => {\n                                    console.log(error);\n                                })\n            },\n\n            retrieveDataElementGroups: function ()\n            {\n                this.dataElementGroups.push(...\n                                            _.chain(this.dataElements)\n                                            .groupBy(\"description\")\n                                            .toPairs()\n                                            .map(pair => _.zipObject(['name', 'dataElements'], pair))\n                                            .value());\n\n            },\n\n            calculateTotalComparisonValue: function ()\n            {\n                let dataValueSets = JSON.parse(sessionStorage.getItem('dataValues'));\n                let totals = [];\n\n                for(var i = 0; i < this.dataElementGroups.length; i++)\n                {\n                    let dataElements = this.dataElementGroups[i].dataElements;\n\n                    totals.push( _.chain(dataValueSets)\n                            .filter((item) => {\n                                return _.includes(_.map(dataElements, 'id'), item['dataElement']);\n                            })\n                            .value()\n                            .reduce((sum,number) => {return }).value());\n\n                    console.log(totals)\n                }\n\n                return this.getCommonTotalValue(totals);\n\n            },\n\n            getCommonTotalValue : function(totals)\n            {\n                    var mode = [], count = [], i, total, maxIndex = 0;\n\n                    for (i = 0; i < totals.length; i += 1) {\n                        total = totals[i];\n                        count[total] = (count[total] || 0) + 1;\n                        if (count[total] > maxIndex) {\n                            maxIndex = count[total];\n                        }\n                    }\n\n                    for (i in count)\n                        if (count.hasOwnProperty(i)) {\n                            if (count[i] === maxIndex) {\n                                mode.push(Number(i));\n                            }\n                        }\n\n                    return mode[0];\n            }\n\n        },\n        mounted()\n        {\n            this.initialize()\n        },\n        data: () => {\n            return {\n                BASE_URL : 'http://196.216.12.28:9000/dhis/api/dataValueSets.json?orgUnit=aWxqa3whV2P&period=201808&dataSet=GinIisMjsZR',\n                dataElements_URL : 'http://196.216.12.28:9000/dhis/api/dataElements.json',\n\n                isLoading : false,\n                response : null,\n\n                dataElementIDs : [],\n\n                dataElements : [],\n\n                dataElementGroups : []\n            }\n        },\n        computed : {\n            totalComparisonValue : function()\n            {\n                  return this.calculateTotalComparisonValue();\n            }\n        },\n        watch :  {\n            dataElements :  function()\n            {\n                this.retrieveDataElementGroups();\n            }\n        },\n        components : {\n            DataElementGroup,\n        }\n    }\n</script>\n"],"sourceRoot":"src/components"}]}